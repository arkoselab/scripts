--//====================================================\\--
--||                       BASIS
--\\====================================================//--
-- Made by Harkinian,stummy,Unverified,Arkose,PityPolygon and Melon(mostly just Pity so we credited everything for him)

game.TestService.IsSleepAllowed = false
for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
	if v:IsA("BasePart") then 
		game:GetService("RunService").Heartbeat:connect(function()
			v.Velocity = Vector3.new(-40,0,-10)
			pcall(function()
				v.CanCollide = false
			end)
			pcall(function()
				v.CanQuery = false
			end)
		end)
	end
end

Bypass = "death"
loadstring(game:GetObjects("rbxassetid://5325226148")[1].Source)()
for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
game:GetService("RunService").Heartbeat:connect(function()
v.Velocity = Vector3.new(0,30,0)
wait(0.5)
end)
end
end
local p = game.Players.LocalPlayer
local char = p.Character
local mouse = p:GetMouse()
local larm = char["Left Arm"]
local rarm = char["Right Arm"]
local lleg = char["Left Leg"]
local rleg = char["Right Leg"]
local hed = char.Head
local torso = char.Torso
local hum = char.Humanoid
local cam = game.Workspace.CurrentCamera
local root = char.HumanoidRootPart
for i,v in pairs (char:GetChildren()) do
	if v:IsA("Accessory") then
		v.Handle.Massless = true
		v.Handle.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
	end
end

hed.Massless = true
hed.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
torso.Massless = true
torso.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
rarm.Massless = true
rarm.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
larm.Massless = true
larm.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
lleg.Massless = true
lleg.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
rleg.Massless = true
rleg.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
root.Massless = true
root.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
warn("Netless Activated!")
Bypass = "Death"
plr = game.Players.LocalPlayer
dead = false
char = plr.Character



bullet = workspace[plr.Name]["HumanoidRootPart"]
bullet.Transparency = 0
bhandle = bullet
bullet.Massless = true

mouse = plr:GetMouse()
head = char.Head
camera = workspace.CurrentCamera
lt = true
ltt = false

local function IsFirstPerson()
     return (head.CFrame.p - camera.CFrame.p).Magnitude < 1
end

     bbv = Instance.new("BodyPosition",bhandle)
     bbv.Position = char.Torso.CFrame.p
   
     
     
     mouse.Button1Down:Connect(function()
         if dead == false then
        lt = false
        ltt = false
     bbav = Instance.new("BodyAngularVelocity",bhandle)
     bbav.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
     bbav.P = 1000000000000000000000000000
     bbav.AngularVelocity = Vector3.new(10000000000000000000000000000000,100000000000000000000000000,100000000000000000)
     game:GetService("Debris"):AddItem(bbav,0.1)
        if game.Players:GetPlayerFromCharacter(mouse.Target.Parent) then
            if mouse.Target.Parent.Name == char.Name or mouse.Target.Parent.Name == "non" then return end
              --repeat 
            game:GetService("RunService").RenderStepped:Wait()
            bbv.Position = (CFrame.new(mouse.Target.Parent.HumanoidRootPart.CFrame.p,char.Torso.CFrame.p) * CFrame.new(0,0,0)).p
            bhandle.Position = (CFrame.new(mouse.Target.Parent.HumanoidRootPart.CFrame.p,char.Torso.CFrame.p) * CFrame.new(0,0,0)).p
            wait(1)
            --until char.Humanoid.Health == 100 or char.Humanoid.Health == 0
        elseif game.Players:GetPlayerFromCharacter(mouse.Target.Parent.Parent) then
            if mouse.Target.Parent.Name == char.Name or mouse.Target.Parent.Name == "non" then return end
            --repeat 
            game:GetService("RunService").RenderStepped:Wait()
            bbv.Position = (CFrame.new(mouse.Target.Parent.Parent.HumanoidRootPart.CFrame.p,char.Torso.CFrame.p) * CFrame.new(0,0,0)).p
            bhandle.Position = (CFrame.new(mouse.Target.Parent.Parent.HumanoidRootPart.CFrame.p,char.Torso.CFrame.p) * CFrame.new(0,0,0)).p
            wait(1)
            --until char.Humanoid.Health == 100 or char.Humanoid.Health == 0
            
            else
       -- repeat 
        game:GetService("RunService").RenderStepped:Wait()
        wait(1)
        --until char.Humanoid.Health == 100 or char.Humanoid.Health == 0
        end
        wait()
        lt = true
         end
         end)
         
    spawn(
        function()
            while true do
                game:GetService("RunService").Heartbeat:Wait()
                bullet.Velocity = Vector3.new(0,26,0)
         end
    end)

 plr:GetMouse().Button1Down:Connect(function()
attackingwithhrp = true	
end)

 
plr:GetMouse().Button1Up:Connect(function()
attackingwithhrp = false
end)

plr:GetMouse().Button1Down:Connect(function()
repeat wait() until attackingwithhrp == true
repeat
game:GetService("RunService").Heartbeat:Wait()
if plr:GetMouse().Target ~= nil then
bullet.Position = game:GetService("Players").LocalPlayer:GetMouse().Hit.p
end
until attackingwithhrp == false
end)


local script = game:GetObjects("rbxassetid://12172417761")[1]
local MODULE = script
local PLAYER = game:GetService("Players").LocalPlayer
local CHARACTER = Workspace.non
local HUM = CHARACTER.Humanoid
 
local ROOT = HUM.Torso
local HEAD = CHARACTER.Head
local TORSO = CHARACTER.Torso
local RIGHTARM = CHARACTER["Right Arm"]
local LEFTARM = CHARACTER["Left Arm"]
local RIGHTLEG = CHARACTER["Right Leg"]
local LEFTLEG = CHARACTER["Left Leg"]
local ROOTJOINT = ROOT["RootJoint"]
local NECK = TORSO["Neck"]
local RIGHTSHOULDER = TORSO["Right Shoulder"]
local LEFTSHOULDER = TORSO["Left Shoulder"]
local RIGHTHIP = TORSO["Right Hip"]
local LEFTHIP = TORSO["Left Hip"]
local MOUSEPOS = ROOT.Position

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

--//====================================================\\--
--||                       FE CODE
--\\====================================================//--
--RED MIIIIIIIIIIIIIIIII

--//====================================================\\--
--||                  BACKGROUND VALUES
--\\====================================================//--

local ANIM_SPEED = 3
local MOUSE = PLAYER:GetMouse()
local FRAME_SPEED = 1 / 60 -- (1 / 30) OR (1 / 60)
local CHANGE = 2 / ANIM_SPEED
local DAMAGEMULTIPLIER = 1
local ANIM = "Idle"
local KEYHOLD = false
local MOUSEHOLD = false
local SINE = 0
local ATTACKING = false
local Debris = game:GetService("Debris")
local Effects = IT("Folder",CHARACTER)
Effects.Name = "FXFolder"
local ROOTC0 = CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180))
local NECKC0 = CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180))
local RIGHTSHOULDERC0 = CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))
local LEFTSHOULDERC0 = CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))
 
--//====================================================\\--
--||                     HEARTBEAT
--\\====================================================//--

ArtificialHB = Instance.new("BindableEvent", script)
ArtificialHB.Name = "ArtificialHB"

script:WaitForChild("ArtificialHB")

frame = FRAME_SPEED
tf = 0
allowframeloss = false
tossremainder = false
lastframe = tick()
script.ArtificialHB:Fire()

game:GetService("RunService").Heartbeat:connect(function(s, p)
	tf = tf + s
	if tf >= frame then
		if allowframeloss then
			ArtificialHB:Fire()
			lastframe = tick()
		else
			for i = 1, math.floor(tf / frame) do
				ArtificialHB:Fire()
			end
			lastframe = tick()
		end
		if tossremainder then
			tf = 0
		else
			tf = tf - frame * math.floor(tf / frame)
		end
	end
end)

function PositiveAngle(NUMBER)
	if NUMBER >= 0 then
		NUMBER = 0
	end
	return NUMBER
end

function NegativeAngle(NUMBER)
	if NUMBER <= 0 then
		NUMBER = 0
	end
	return NUMBER
end

function Swait(NUMBER)
	if NUMBER == 0 or NUMBER == nil then
		ArtificialHB.Event:wait()
	else
		for i = 1, NUMBER do
			ArtificialHB.Event:wait()
		end
	end
end

--//====================================================\\--
--||                       CLERP
--\\====================================================//--

function QuaternionFromCFrame(cf)
	local mx, my, mz, m00, m01, m02, m10, m11, m12, m20, m21, m22 = cf:components()
	local trace = m00 + m11 + m22
	if trace > 0 then 
		local s = math.sqrt(1 + trace)
		local recip = 0.5 / s
		return (m21 - m12) * recip, (m02 - m20) * recip, (m10 - m01) * recip, s * 0.5
	else
		local i = 0
		if m11 > m00 then
			i = 1
		end
		if m22 > (i == 0 and m00 or m11) then
			i = 2
		end
		if i == 0 then
			local s = math.sqrt(m00 - m11 - m22 + 1)
			local recip = 0.5 / s
			return 0.5 * s, (m10 + m01) * recip, (m20 + m02) * recip, (m21 - m12) * recip
		elseif i == 1 then
			local s = math.sqrt(m11 - m22 - m00 + 1)
			local recip = 0.5 / s
			return (m01 + m10) * recip, 0.5 * s, (m21 + m12) * recip, (m02 - m20) * recip
		elseif i == 2 then
			local s = math.sqrt(m22 - m00 - m11 + 1)
			local recip = 0.5 / s return (m02 + m20) * recip, (m12 + m21) * recip, 0.5 * s, (m10 - m01) * recip
		end
	end
end
 
function QuaternionToCFrame(px, py, pz, x, y, z, w)
	local xs, ys, zs = x + x, y + y, z + z
	local wx, wy, wz = w * xs, w * ys, w * zs
	local xx = x * xs
	local xy = x * ys
	local xz = x * zs
	local yy = y * ys
	local yz = y * zs
	local zz = z * zs
	return CFrame.new(px, py, pz, 1 - (yy + zz), xy - wz, xz + wy, xy + wz, 1 - (xx + zz), yz - wx, xz - wy, yz + wx, 1 - (xx + yy))
end
 
function QuaternionSlerp(a, b, t)
	local cosTheta = a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]
	local startInterp, finishInterp;
	if cosTheta >= 0.0001 then
		if (1 - cosTheta) > 0.0001 then
			local theta = ACOS(cosTheta)
			local invSinTheta = 1 / SIN(theta)
			startInterp = SIN((1 - t) * theta) * invSinTheta
			finishInterp = SIN(t * theta) * invSinTheta
		else
			startInterp = 1 - t
			finishInterp = t
		end
	else
		if (1 + cosTheta) > 0.0001 then
			local theta = ACOS(-cosTheta)
			local invSinTheta = 1 / SIN(theta)
			startInterp = SIN((t - 1) * theta) * invSinTheta
			finishInterp = SIN(t * theta) * invSinTheta
		else
			startInterp = t - 1
			finishInterp = t
		end
	end
	return a[1] * startInterp + b[1] * finishInterp, a[2] * startInterp + b[2] * finishInterp, a[3] * startInterp + b[3] * finishInterp, a[4] * startInterp + b[4] * finishInterp
end

function Clerp(a, b, t)
	local qa = {QuaternionFromCFrame(a)}
	local qb = {QuaternionFromCFrame(b)}
	local ax, ay, az = a.x, a.y, a.z
	local bx, by, bz = b.x, b.y, b.z
	local _t = 1 - t
	return QuaternionToCFrame(_t * ax + t * bx, _t * ay + t * by, _t * az + t * bz, QuaternionSlerp(qa, qb, t))
end

--//====================================================\\--
--||                     FUNCTIONS
--\\====================================================//--

function WeldParts(A,B)
	local WLD = IT("ManualWeld")
	WLD.Part0 = A
	WLD.Part1 = B
	WLD.C1 = B.CFrame:inverse() * A.CFrame
	WLD.Parent = A
	return WLD
end

--NewSound({ID = 0,PARENT = ROOT,VOLUME = 0.5,PITCH = 1,LOOP = false,MAXDISTANCE = 1000,EMITTERSIZE = 10,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
function NewSound(TABLE)
	local ID = "rbxassetid://"..(TABLE.ID or 0)
	local PARENT = (TABLE.PARENT or ROOT)
	local VOLUME = (TABLE.VOLUME or 0.5)
	local PITCH = (TABLE.PITCH or 1)
	local LOOP = (TABLE.LOOP or false)
	local MAXDISTANCE = (TABLE.MAXDISTANCE or 100)
	local EMITTERSIZE = (TABLE.EMITTERSIZE or 10)
	local PLAYING = (TABLE.PLAYING or true)
	local PLAYONREMOVE = (TABLE.PLAYONREMOVE or false)
	local DOESDEBRIS = (TABLE.DOESDEBRIS or true)
	if ID ~= "rbxassetid://0" then
		local SOUND = IT("Sound",PARENT)
		SOUND.SoundId = ID
		SOUND.Volume = VOLUME
		SOUND.Pitch = PITCH
		SOUND.Looped = LOOP
		SOUND.MaxDistance = MAXDISTANCE
		SOUND.EmitterSize = EMITTERSIZE
		SOUND.PlayOnRemove = PLAYONREMOVE
		if DOESDEBRIS == true and PLAYING == true and LOOP == false then
			Debris:AddItem(SOUND,SOUND.TimeLength+5)
		end
		if PLAYING == true then
			SOUND:Play()
		end
		return SOUND
	end
end

function OofOuchBlood(LOCATION,TO,AMOUNT)
	local P = CreatePart(3, Effects, "Granite", 0, 1, BRICKC("Pearl"), "Blood", VT(0,0,0), true)
	P.CFrame = CF(LOCATION,TO)
	local BLOOD = MODULE.Blood:Clone()
	BLOOD.Parent = P
	BLOOD:Emit(AMOUNT)
	Debris:AddItem(P,2)
end

function AttachmentCFrame(A)
	return A.Parent.CFrame*CF(A.Position)
end

function CastProperRay(StartPos, EndPos, Distance, Ignore)
	local DIRECTION = CF(StartPos,EndPos).lookVector
	return Raycast(StartPos, DIRECTION, Distance, Ignore)
end

function ManSlaughter(MAN)
 
end

function Concuss(HUMAN,TIME)
	 
end

function ApplyDamageTo(HUM,DAMAGE)
 
end

function AreaOfEffect(AREA,RANGE,MIN,MAX,RETURN)
 
end

function Mist(AREA,DURATION)
	coroutine.resume(coroutine.create(function()
		local MISTSPOT = CreatePart(3,Effects,"Neon",0,1,"Red","Mist",VT(0,0,0),true)
		MISTSPOT.CFrame = CF(AREA)
		local MISTCLOUD = MODULE.KillMist:Clone()
		MISTCLOUD.Parent = MISTSPOT
		MISTCLOUD:Emit(50)
		MISTCLOUD.Enabled = true
		for i = 1, math.ceil(DURATION*2) do
			wait(0.5)
			local FOES = AreaOfEffect(MISTSPOT.Position,20,0,0,true)
			if #FOES > 0 then
				for E = 1, #FOES do
					local DAMAGE = (math.ceil((50 - (MISTSPOT.Position - FOES[E][3].Position).Magnitude)))/5
					if FOES[E][2].MaxHealth > 3000 then
						ManSlaughter(FOES[E][1])
					else
						if FOES[E][2].Health > 0 then
							Concuss(FOES[E][2],5)
							ApplyDamageTo(FOES[E][2],DAMAGE)
						end
					end
				end
			end
		end
		MISTCLOUD.Enabled = false
		Debris:AddItem(MISTSPOT,6)
	end))
end

function Slaughter(WHO)
 
end

function CreateMesh(MESH, PARENT, MESHTYPE, MESHID, TEXTUREID, SCALE, OFFSET)
	local NEWMESH = IT(MESH)
	if MESH == "SpecialMesh" then
		NEWMESH.MeshType = MESHTYPE
		if MESHID ~= "nil" and MESHID ~= "" then
			NEWMESH.MeshId = "http://www.roblox.com/asset/?id="..MESHID
		end
		if TEXTUREID ~= "nil" and TEXTUREID ~= "" then
			NEWMESH.TextureId = "http://www.roblox.com/asset/?id="..TEXTUREID
		end
	end
	NEWMESH.Offset = OFFSET or VT(0, 0, 0)
	NEWMESH.Scale = SCALE
	NEWMESH.Parent = PARENT
	return NEWMESH
end

function CreatePart(FORMFACTOR, PARENT, MATERIAL, REFLECTANCE, TRANSPARENCY, BRICKCOLOR, NAME, SIZE, ANCHOR)
	local NEWPART = IT("Part")
	NEWPART.formFactor = FORMFACTOR
	NEWPART.Reflectance = REFLECTANCE
	NEWPART.Transparency = TRANSPARENCY
	NEWPART.CanCollide = false
	NEWPART.Locked = true
	NEWPART.Anchored = true
	if ANCHOR == false then
		NEWPART.Anchored = false
	end
	NEWPART.BrickColor = BRICKC(tostring(BRICKCOLOR))
	NEWPART.Name = NAME
	NEWPART.Size = SIZE
	NEWPART.Position = ROOT.Position
	NEWPART.Material = MATERIAL
	NEWPART:BreakJoints()
	NEWPART.Parent = PARENT
	return NEWPART
end

function Raycast(POSITION, DIRECTION, RANGE, TABLE)
	local TABLE = ((type(TABLE) == "table" and TABLE) or {TABLE})
	return game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(POSITION, DIRECTION * RANGE), TABLE)
end


--WACKYEFFECT({EffectType = "", Size = VT(1,1,1), Size2 = VT(0,0,0), Transparency = 0, Transparency2 = 1, CFrame = CF(), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = C3(1,1,1), SoundID = nil, SoundPitch = nil, SoundVolume = nil, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
function WACKYEFFECT(Table)
	local TYPE = (Table.EffectType or "Sphere")
	local SIZE = (Table.Size or VT(1,1,1))
	local ENDSIZE = (Table.Size2 or VT(0,0,0))
	local TRANSPARENCY = (Table.Transparency or 0)
	local ENDTRANSPARENCY = (Table.Transparency2 or 1)
	local CFRAME = (Table.CFrame or ROOT.CFrame)
	local MOVEDIRECTION = (Table.MoveToPos or nil)
	local ROTATION1 = (Table.RotationX or 0)
	local ROTATION2 = (Table.RotationY or 0)
	local ROTATION3 = (Table.RotationZ or 0)
	local MATERIAL = (Table.Material or "Neon")
	local COLOR = (Table.Color or C3(1,1,1))
	local TIME = (Table.Time or 45)
	local SOUNDID = (Table.SoundID or nil)
	local SOUNDPITCH = (Table.SoundPitch or nil)
	local SOUNDVOLUME = (Table.SoundVolume or nil)
	local USEBOOMERANGMATH = (Table.UseBoomerangMath or false)
	local BOOMERANG = (Table.Boomerang or 0)
	local SIZEBOOMERANG = (Table.SizeBoomerang or 0)
	coroutine.resume(coroutine.create(function()
		local PLAYSSOUND = false
		local SOUND = nil
		local EFFECT = CreatePart(3, Effects, MATERIAL, 0, TRANSPARENCY, BRICKC("Pearl"), "Effect", VT(1,1,1), true)
		if SOUNDID ~= nil and SOUNDPITCH ~= nil and SOUNDVOLUME ~= nil then
			PLAYSSOUND = true
			SOUND = NewSound({ID = SOUNDID,PARENT = EFFECT,VOLUME = SOUNDVOLUME,PITCH = SOUNDPITCH,LOOP = false,MAXDISTANCE = 200,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
		end
		EFFECT.Color = COLOR
		local MSH = nil
		if TYPE == "Sphere" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "Sphere", "", "", SIZE, VT(0,0,0))
		elseif TYPE == "Block" or TYPE == "Box" then
			MSH = IT("BlockMesh",EFFECT)
			MSH.Scale = SIZE
		elseif TYPE == "Wave" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "20329976", "", SIZE, VT(0,0,-SIZE.X/8))
		elseif TYPE == "Ring" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "559831844", "", VT(SIZE.X,SIZE.X,0.1), VT(0,0,0))
		elseif TYPE == "Slash" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "662586858", "", VT(SIZE.X/10,0,SIZE.X/10), VT(0,0,0))
		elseif TYPE == "Round Slash" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "662585058", "", VT(SIZE.X/10,0,SIZE.X/10), VT(0,0,0))
		elseif TYPE == "Swirl" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "168892432", "", SIZE, VT(0,0,0))
		elseif TYPE == "Skull" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "4770583", "", SIZE, VT(0,0,0))
		elseif TYPE == "Crystal" then
			MSH = CreateMesh("SpecialMesh", EFFECT, "FileMesh", "9756362", "", SIZE, VT(0,0,0))
		end
		if MSH ~= nil then
			local BOOMR1 = 1+BOOMERANG/50
			local BOOMR2 = 1+SIZEBOOMERANG/50
			local MOVESPEED = nil
			if MOVEDIRECTION ~= nil then
				if USEBOOMERANGMATH == true then
					MOVESPEED = ((CFRAME.p - MOVEDIRECTION).Magnitude/TIME)*BOOMR1
				else
					MOVESPEED = ((CFRAME.p - MOVEDIRECTION).Magnitude/TIME)
				end
			end
			local GROWTH = nil
			if USEBOOMERANGMATH == true then
				GROWTH = (SIZE - ENDSIZE)*(BOOMR2+1)
			else
				GROWTH = (SIZE - ENDSIZE)
			end
			local TRANS = TRANSPARENCY - ENDTRANSPARENCY
			if TYPE == "Block" then
				EFFECT.CFrame = CFRAME*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
			else
				EFFECT.CFrame = CFRAME
			end
			if USEBOOMERANGMATH == true then
				for LOOP = 1, TIME+1 do
					Swait()
					MSH.Scale = MSH.Scale - (VT((GROWTH.X)*((1 - (LOOP/TIME)*BOOMR2)),(GROWTH.Y)*((1 - (LOOP/TIME)*BOOMR2)),(GROWTH.Z)*((1 - (LOOP/TIME)*BOOMR2)))*BOOMR2)/TIME
					if TYPE == "Wave" then
						MSH.Offset = VT(0,0,-MSH.Scale.Z/8)
					end
					EFFECT.Transparency = EFFECT.Transparency - TRANS/TIME
					if TYPE == "Block" then
						EFFECT.CFrame = CFRAME*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
					else
						EFFECT.CFrame = EFFECT.CFrame*ANGLES(RAD(ROTATION1),RAD(ROTATION2),RAD(ROTATION3))
					end
					if MOVEDIRECTION ~= nil then
						local ORI = EFFECT.Orientation
						EFFECT.CFrame = CF(EFFECT.Position,MOVEDIRECTION)*CF(0,0,-(MOVESPEED)*((1 - (LOOP/TIME)*BOOMR1)))
						EFFECT.CFrame = CF(EFFECT.Position)*ANGLES(RAD(ORI.X),RAD(ORI.Y),RAD(ORI.Z))
					end
				end
			else
				for LOOP = 1, TIME+1 do
					Swait()
					MSH.Scale = MSH.Scale - GROWTH/TIME
					if TYPE == "Wave" then
						MSH.Offset = VT(0,0,-MSH.Scale.Z/8)
					end
					EFFECT.Transparency = EFFECT.Transparency - TRANS/TIME
					if TYPE == "Block" then
						EFFECT.CFrame = CFRAME*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
					else
						EFFECT.CFrame = EFFECT.CFrame*ANGLES(RAD(ROTATION1),RAD(ROTATION2),RAD(ROTATION3))
					end
					if MOVEDIRECTION ~= nil then
						local ORI = EFFECT.Orientation
						EFFECT.CFrame = CF(EFFECT.Position,MOVEDIRECTION)*CF(0,0,-MOVESPEED)
						EFFECT.CFrame = CF(EFFECT.Position)*ANGLES(RAD(ORI.X),RAD(ORI.Y),RAD(ORI.Z))
					end
				end
			end
			EFFECT.Transparency = 1
			if PLAYSSOUND == false then
				EFFECT:remove()
			else
				repeat Swait() until EFFECT:FindFirstChildOfClass("Sound") == nil
				EFFECT:remove()
			end
		else
			if PLAYSSOUND == false then
				EFFECT:remove()
			else
				repeat Swait() until EFFECT:FindFirstChildOfClass("Sound") == nil
				EFFECT:remove()
			end
		end
	end))
end

function CameraShake(AREA,RANGE,SHAKE,TIMER)
	 
end

--Debree({Delay = 1.5,Variant = "",Location = ROOT.Position,Color = C3(1,1,1),Size = 1,Distance = 1,Material = "Slate",Scatter = 1,Amount = 1,DebreeCount = 1})
function Debree(Table)
	local KindOf = (Table.Variant or "Ring")
	local Position = (Table.Location or ROOT.Position)
	local Coloration = (Table.Color or C3(1,1,1))
	local Texture = (Table.Material or "Slate")
	local Fling = (Table.Scatter or 1)
	local Number = (Table.Amount or 1)
	local Rocks = (Table.DebreeCount or 1)
	local Range = (Table.Distance or 1)
	local Scale = (Table.Size or 1)
	local Timer = (Table.Delay or 1.5)
	coroutine.resume(coroutine.create(function()
		local ScaleVector = VT(Scale,Scale,Scale)
		local Boulders = {}
		Position = CF(Position)
		if KindOf == "Ring" or KindOf == "Both" then
			for RockValue = 1, Number do
				local LOCATION = Position * ANGLES(RAD(0), RAD((360/Number)*RockValue), RAD(0))*CF(0,MRANDOM(-math.ceil(Scale/4),math.ceil(Scale/4)),Range)
				local BOULDER = CreatePart(3, workspace, Texture, 0, 0, BRICKC("Pearl"), "Debree", ScaleVector, true)
				BOULDER.CanCollide = true
				BOULDER.CFrame = LOCATION*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
				BOULDER.Color = Coloration
				table.insert(Boulders,BOULDER)
			end
		end
		if KindOf == "Loose" or KindOf == "Both" then
			for RockValue = 1, Rocks do
				local LOCATION = Position * ANGLES(RAD(0), RAD((360/Number)*RockValue), RAD(0))*CF(0,MRANDOM(-math.ceil(Scale-(Scale/2)),math.ceil(Scale-(Scale/2))),0.7)
				local BOULDER = CreatePart(3, workspace, Texture, 0, 0, BRICKC("Pearl"), "Debree", ScaleVector, false)
				BOULDER.CanCollide = true
				BOULDER.CFrame = LOCATION*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
				BOULDER.Velocity = CF(BOULDER.Position-VT(0,4,0),BOULDER.CFrame*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))*CF(0,5,0).p).lookVector*MRANDOM(Fling-(Fling/1.5),Fling+(Fling/1.5))
				BOULDER.Color = Coloration
				table.insert(Boulders,BOULDER)
			end
		end
		if KindOf == "Random" then
			for RockValue = 1, Number do
				local LOCATION = Position * ANGLES(RAD(0), RAD((360/Number)*RockValue), RAD(0))*CF(0,MRANDOM(-math.ceil(Scale/4),math.ceil(Scale/4)),MRANDOM(0,Range))
				local BOULDER = CreatePart(3, workspace, Texture, 0, 0, BRICKC("Pearl"), "Debree", ScaleVector, true)
				BOULDER.CanCollide = true
				BOULDER.CFrame = LOCATION*ANGLES(RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)),RAD(MRANDOM(0,360)))
				BOULDER.Color = Coloration
				table.insert(Boulders,BOULDER)
			end
		end
		wait(Timer)
		for E = 1, 45 do
			Swait()
			for A = 1, #Boulders do
				Boulders[A].Transparency = Boulders[A].Transparency + 1/45
			end
		end
		for A = 1, #Boulders do
			Boulders[A]:Destroy()
		end
	end))
end

function Chatter(Text,Timer)
	local chat = coroutine.wrap(function()
		if CHARACTER:FindFirstChild("SpeechBoard")~= nil then
			CHARACTER:FindFirstChild("SpeechBoard"):destroy()
		end
		local naeeym2 = IT("BillboardGui",CHARACTER)
		naeeym2.Size = UD2(0,100,0,40)
		naeeym2.StudsOffset = Vector3.new(0,2,0)
		naeeym2.Adornee = HEAD
		naeeym2.Name = "SpeechBoard"
		naeeym2.AlwaysOnTop = true
		local tecks2 = IT("TextLabel",naeeym2)
		tecks2.BackgroundTransparency = 1
		tecks2.BorderSizePixel = 0
		tecks2.Text = ""
		tecks2.Font = "Legacy"
		tecks2.TextSize = 15
		tecks2.TextStrokeTransparency = 0
		tecks2.TextColor3 = Color3.new(1,1,1)
		tecks2.TextStrokeColor3 = Color3.new(0,0,0)
		tecks2.Size = UDim2.new(1,0,0.5,0)
		for i = 1,string.len(Text),1 do
			if naeeym2.Parent ~= CHARACTER then 
				break
			end
			NewSound({ID = 418252437,PARENT = HEAD,VOLUME = 1,PITCH = MRANDOM(8,12)/10,LOOP = false,MAXDISTANCE = 75,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
			tecks2.Text = string.sub(Text,1,i)
			wait(Timer)
		end
		wait(1)
		naeeym2:Destroy()
	end)
	chat()
end

function MELEEAREA(RANGE,BEEF,KNOCKBACK)
	local DIDHIT = false
	NewSound({ID = 153647549,PARENT = ROOT,VOLUME = 1,PITCH = MRANDOM(8,12)/8,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	for index, CHILD in pairs(workspace:GetChildren()) do
		if CHILD:FindFirstChildOfClass("Humanoid") and CHILD ~= CHARACTER then
			local HUMAN = CHILD:FindFirstChildOfClass("Humanoid")
			local TORS = CHILD:FindFirstChild("Torso") or CHILD:FindFirstChild("UpperTorso")
			if TORS then
				if (TORS.Position - ROOT.CFrame*CF(0,0,-RANGE).p).Magnitude <= RANGE+2 and ((ROOT.CFrame*CF(0,0,-1).p - TORS.Position).Magnitude < (ROOT.CFrame*CF(0,0,1).p - TORS.Position).Magnitude) then
					DIDHIT = true
					NewSound({ID = 201858024,PARENT = TORS,VOLUME = 3,PITCH = MRANDOM(8,12)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
					HUMAN.Health = HUMAN.Health - (DAMAGEMULTIPLIER*BEEF)
					local BV = IT("BodyVelocity")
					BV.MaxForce = BV.MaxForce * 500
					BV.Velocity = CF(ROOT.Position,TORS.Position+VT(0,0.5,0)).lookVector*((KNOCKBACK+(BEEF/2))*DAMAGEMULTIPLIER)
					BV.Parent = TORS
					Debris:AddItem(BV,0.05)
					OofOuchBlood(TORS.Position,ROOT.Position,math.ceil(BEEF/4))
					if HUMAN.Health <= 0 and BEEF ~= "Instant" then
						ManSlaughter(CHILD)
					elseif BEEF == "Instant" then
						Slaughter(HUMAN)
					end
				end
			end
		end
	end
	if DIDHIT == true then
		CameraShake(ROOT.CFrame*CF(0,0,-1.5).p,4,8*DAMAGEMULTIPLIER,15)
	end
end

--//====================================================\\--
--||                     CHARACTER
--\\====================================================//--
 
local ZERO = CF(0,-1,0)
local FACE = MODULE.Face
FACE:SetPrimaryPartCFrame(HEAD.CFrame)
 
	 
local THESMILE = MODULE.TheSmile
for _, c in pairs(THESMILE:GetChildren()) do
	if c:IsA("Model") then
		for _, v in pairs(c:GetChildren()) do
			if v ~= c.PrimaryPart then
				WeldParts(c.PrimaryPart,v)
			end
			v.Anchored = false
			v.Massless = true
			v.CanCollide = false
		end
	else
		if c ~= THESMILE.PrimaryPart then
			WeldParts(THESMILE.PrimaryPart,c)
		end
		c.Anchored = false
		c.Massless = true
		c.CanCollide = false
	end
end
local JAWJOINT1 = WeldParts(THESMILE.Joint,THESMILE.UpperTeeth.PrimaryPart)
local JAWJOINT2 = WeldParts(THESMILE.Joint,THESMILE.BottomTeeth.PrimaryPart)
local THESMILE_JOINT = IT("Motor6D")
THESMILE_JOINT.Name = "The Smile Grip"
THESMILE_JOINT.C0 = ZERO
THESMILE_JOINT.Part0 = RIGHTARM
THESMILE_JOINT.Part1 = THESMILE.PrimaryPart
THESMILE_JOINT.Parent = RIGHTARM
local DACAPO = MODULE.SmileCapo
for _, c in pairs(DACAPO:GetChildren()) do
	if c ~= DACAPO.PrimaryPart then
		WeldParts(DACAPO.PrimaryPart,c)
	end
	c.Anchored = false
	c.Massless = true
	c.CanCollide = false
end
local DACAPO_JOINT = IT("Motor6D")
DACAPO_JOINT.Name = "Da Capo Grip"
DACAPO_JOINT.C0 = ZERO
DACAPO_JOINT.Part0 = LEFTARM
DACAPO_JOINT.Part1 = DACAPO.PrimaryPart
DACAPO_JOINT.Parent = LEFTARM
 
local THEGIANT = MODULE.GiantHead
THEGIANT.Parent = nil
local JAWOPEN = false
local MISTPOINT = IT("Attachment",ROOT)
MISTPOINT.Position = VT(0,-4,0)
local MIST = MODULE.Mist:Clone()
MIST.Parent = MISTPOINT
local SMILEHEAD = THESMILE.Head
local SMILETRAIL = THESMILE.Head.Trail
local CAPOTRAIL = DACAPO.LargePart.Trail
local COMBO = 1
local LOOSESCYTHE = false

local BODY = {}
for _, c in pairs(CHARACTER:GetDescendants()) do
	if c:IsA("BasePart") then
		table.insert(BODY,{c,c.Parent,c.Material,c.Color,c.Transparency,c.Size,c.Name})
	elseif c:IsA("JointInstance") or c:IsA("SpecialMesh") then
		table.insert(BODY,{c,c.Parent,nil,nil,nil,nil,nil})
	end
end
function refit()
	 
end
 
local CUSTOMTAG = IT("BillboardGui",CHARACTER)
CUSTOMTAG.AlwaysOnTop = true
CUSTOMTAG.Size = UD2(2,15,2,15)
CUSTOMTAG.StudsOffset = VT(0,1.2,0)
CUSTOMTAG.MaxDistance = 75
CUSTOMTAG.Adornee = HEAD
CUSTOMTAG.Name = "Name"
CUSTOMTAG.PlayerToHideFrom = PLAYER
local TAGETXT = IT("TextLabel",CUSTOMTAG)
TAGETXT.BackgroundTransparency = 1
TAGETXT.TextScaled = true
TAGETXT.BorderSizePixel = 0
TAGETXT.Text = "Red Mist"
TAGETXT.Font = "Fantasy"
TAGETXT.TextSize = 30
TAGETXT.TextStrokeTransparency = 0.5
TAGETXT.TextColor3 = C3(0,0,0)
TAGETXT.TextStrokeColor3 = C3(1,0,0)
TAGETXT.Size = UD2(1,0,0.5,0)
TAGETXT.Parent = CUSTOMTAG

local GUI = MODULE.ControlsGUI
GUI.Parent = PLAYER.PlayerGui
GUI.ToggleButton.MouseButton1Click:Connect(function()
	if GUI.ToggleButton.Controls.Visible == false then
		GUI.ToggleButton.Controls.Visible = true
	elseif GUI.ToggleButton.Controls.Visible == true then
		GUI.ToggleButton.Controls.Visible = false
	end
end)

--//====================================================\\--
--||                     ABILITIES
--\\====================================================//--

function MaceSwings()
	ATTACKING = true
	JAWOPEN = false
	repeat
		if COMBO == 1 then
			COMBO = 2
			for i=0, 0.3, 0.1 / ANIM_SPEED do
				Swait()
				ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-5)), 1 / ANIM_SPEED)
				NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(5)), 1 / ANIM_SPEED)
				RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(90)) * ANGLES(RAD(0), RAD(180), RAD(0)) * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
				THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, CF(0,-1,0) * ANGLES(RAD(-40), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
				DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(-2), RAD(85), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-95), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
			end
			MELEEAREA(5,35,2)
			SMILETRAIL.Enabled = true
			NewSound({ID = 1489705211,PARENT = ROOT,VOLUME = 3,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
			for i=0, 0.45, 0.1 / ANIM_SPEED do
				Swait()
				ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.1) * ANGLES(RAD(0), RAD(0), RAD(45)), 1 / ANIM_SPEED)
				NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-45)), 1 / ANIM_SPEED)
				RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.15, 0.5, -0.75) * ANGLES(RAD(0), RAD(0), RAD(-90)) * ANGLES(RAD(25), RAD(0), RAD(0))  * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
				THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, CF(0,-1,0) * ANGLES(RAD(-100), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
				DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(-2), RAD(60), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -0.9, -0.3) * ANGLES(RAD(0), RAD(-100), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 1 / ANIM_SPEED)
			end
			SMILETRAIL.Enabled = false
		elseif COMBO == 2 then
			COMBO = 1
			for i=0, 0.1, 0.1 / ANIM_SPEED do
				Swait()
				ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(5)), 1 / ANIM_SPEED)
				NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-5)), 1 / ANIM_SPEED)
				RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.1, 0.5, -0.75) * ANGLES(RAD(45), RAD(0), RAD(0))  * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
				THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, CF(0,-1,0) * ANGLES(RAD(-35), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
				DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(95), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
			end
			for i=0, 0.25, 0.1 / ANIM_SPEED do
				Swait()
				ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(5)), 1 / ANIM_SPEED)
				NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-5)), 1 / ANIM_SPEED)
				RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.1, 0.5, -0.75) * ANGLES(RAD(0), RAD(0), RAD(-90)) * ANGLES(RAD(35), RAD(180), RAD(0))  * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
				THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, CF(0,-1,0) * ANGLES(RAD(-35), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
				DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(95), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-80), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
			end
			MELEEAREA(5,35,2)
			NewSound({ID = 1489705211,PARENT = ROOT,VOLUME = 3,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
			SMILETRAIL.Enabled = true
			for i=0, 0.45, 0.1 / ANIM_SPEED do
				Swait()
				ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.1) * ANGLES(RAD(0), RAD(0), RAD(-45)), 1 / ANIM_SPEED)
				NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(45)), 1 / ANIM_SPEED)
				RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(90)) * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
				THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, CF(0,-1,0) * ANGLES(RAD(-50), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
				DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -0.9, -0.3) * ANGLES(RAD(0), RAD(100), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 1 / ANIM_SPEED)
				LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(-10), RAD(-60), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(0)), 1 / ANIM_SPEED)
			end
			SMILETRAIL.Enabled = false
		end
	until MOUSEHOLD == false
	ATTACKING = false
end
function CapoRush()
	if LOOSESCYTHE == false then
		ATTACKING = true
		ROOT.Anchored = true
		for i=0, 1, 0.1 / ANIM_SPEED do
			Swait()
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(45)), 0.5 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-10)) * ANGLES(RAD(0 - 2.5 * SIN(SINE / 12)), RAD(5), RAD(0)), 0.5 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
			THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-90)) * ANGLES(RAD(0), RAD(180), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
			DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(100), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-45), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		end
		local Pose = function()
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.25) * ANGLES(RAD(45), RAD(0), RAD(0)), 1 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(15), RAD(0), RAD(0)), 1 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(50), RAD(0), RAD(45)) * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
			THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(0)), 1 / ANIM_SPEED)
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1, 0.5, -0.5) * ANGLES(RAD(0), RAD(0), RAD(90)) * ANGLES(RAD(35), RAD(45), RAD(0)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
			DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(-35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -0.75, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(45)) * CF(0.5,0,0), 1 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-60), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-15)), 1 / ANIM_SPEED)
		end
		local HIT,DESTINATION = Raycast(ROOT.Position,CF(ROOT.Position,VT(MOUSEPOS.X,ROOT.Position.Y,MOUSEPOS.Z)).lookVector,100,CHARACTER)
		if HIT then
			if HIT.Anchored == false then
				if HIT.Parent:IsA("Accessory") then
					HIT,DESTINATION = Raycast(ROOT.Position,CF(ROOT.Position,VT(MOUSEPOS.X,ROOT.Position.Y,MOUSEPOS.Z)).lookVector,100,{CHARACTER,HIT.Parent.Parent})
				else
					HIT,DESTINATION = Raycast(ROOT.Position,CF(ROOT.Position,VT(MOUSEPOS.X,ROOT.Position.Y,MOUSEPOS.Z)).lookVector,100,{CHARACTER,HIT.Parent})
				end
			end
		end
		local DISTANCE = (ROOT.Position - DESTINATION).Magnitude
		if DISTANCE > 50 and DISTANCE < 500 then
			ROOT.CFrame = CF(ROOT.Position,DESTINATION)
			for i = 1, math.ceil(DISTANCE/5) do
				for i = 1, 3 do
					WACKYEFFECT({Time = 35, EffectType = "Round Slash", Size = VT(i/10,0,i/10), Size2 = VT(i/10,0,i/10), Transparency = 0.5, Transparency2 = 1, CFrame = ROOT.CFrame * ANGLES(RAD(0), RAD(90), RAD(0)), MoveToPos = nil, RotationX = MRANDOM(-10,10)/50, RotationY = MRANDOM(-10,10), RotationZ = MRANDOM(-10,10)/50, Material = "Neon", Color = C3(0,0,0), SoundID = nil, SoundPitch = 1, SoundVolume = 0.2, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
				end
				for index, CHILD in pairs(workspace:GetChildren()) do
					if CHILD:FindFirstChildOfClass("Humanoid") and CHILD ~= CHARACTER then
						local HUMAN = CHILD:FindFirstChildOfClass("Humanoid")
						local ROOT2 = HUMAN.Torso
						if ROOT2 and HUMAN.Health > 0 then
							if (ROOT2.Position - ROOT.Position).Magnitude < 20 and (ROOT2.Position.Y < ROOT.Position.Y+7 and ROOT2.Position.Y > ROOT.Position.Y-7) then
								Slaughter(HUMAN)
							end
						end
					end
				end
				ROOT.CFrame = ROOT.CFrame*CF(0,0,-5)
				Pose()
			end
			NewSound({ID = 3052201463,PARENT = ROOT,VOLUME = 3,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
			for i=0, 1, 0.1 / ANIM_SPEED do
				Swait()
				Pose()
			end
		end
		ROOT.Anchored = false
		ATTACKING = false
	end
end
function Devour()
	ATTACKING = true
	JAWOPEN = true
	local GYRO = IT("BodyGyro")
	GYRO.D = 20
	GYRO.P = 5000
	GYRO.MaxTorque = VT(0,4000000,0)
	GYRO.CFrame = CF(ROOT.Position,MOUSEPOS)
	GYRO.Parent = ROOT
	coroutine.resume(coroutine.create(function()
		repeat
			Swait()
			GYRO.CFrame = CF(ROOT.Position,MOUSEPOS)
		until ATTACKING == false
		GYRO:Remove()
	end))
	for i=0, 0.8, 0.1 / ANIM_SPEED do
		Swait()
		ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.25) * ANGLES(RAD(45), RAD(0), RAD(0)), 1 / ANIM_SPEED)
		NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-20), RAD(0), RAD(5)), 1 / ANIM_SPEED)
		RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(90)) * ANGLES(RAD(0), RAD(135), RAD(0)) * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
		THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, CF(0,-1,0) * ANGLES(RAD(-40), RAD(0), RAD(0)), 1 / ANIM_SPEED)
		LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
		DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -0.75, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(45)) * CF(0.5,0,0), 1 / ANIM_SPEED)
		LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-60), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(-15)), 1 / ANIM_SPEED)
	end
	NewSound({ID = 2463509184,PARENT = SMILEHEAD,VOLUME = 6,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	local DIDHIT = false
	for index, CHILD in pairs(workspace:GetChildren()) do
		if CHILD:FindFirstChildOfClass("Humanoid") and CHILD ~= CHARACTER then
			local HUMAN = CHILD:FindFirstChildOfClass("Humanoid")
			local TORS = CHILD:FindFirstChild("Torso") or CHILD:FindFirstChild("UpperTorso")
			if TORS then
				if (TORS.Position - ROOT.CFrame*CF(0,0,-6).p).Magnitude <= 8 and ((ROOT.CFrame*CF(0,0,-1).p - TORS.Position).Magnitude < (ROOT.CFrame*CF(0,0,1).p - TORS.Position).Magnitude) then
					DIDHIT = true
					Slaughter(HUMAN)
				end
			end
		end
	end
	CameraShake(ROOT.CFrame*CF(0,0,-1.5).p,25,45,15)
	coroutine.resume(coroutine.create(function()
		local HITFLOOR,HITPOS = Raycast(ROOT.Position, (CF(ROOT.Position, ROOT.Position + VT(0, -1, 0))).lookVector, 3.55+HUM.HipHeight, CHARACTER)
		if HITFLOOR then
			local FACE = THEGIANT:Clone()
			FACE.Parent = Effects
			FACE:SetPrimaryPartCFrame(CF(HITPOS)*ANGLES(0,RAD(ROOT.Orientation.Y),0)*CF(0,-6,-15)*ANGLES(RAD(45),0,0))
			local CFR = CF(HITPOS)*ANGLES(0,RAD(ROOT.Orientation.Y),0)*CF(0,-5,-20)
			NewSound({ID = 2463509926,PARENT = FACE.Head,VOLUME = 10,PITCH = 1,LOOP = false,MAXDISTANCE = 350,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
			for i = 1, 90 do
				Swait()
				WACKYEFFECT({Time = 75, EffectType = "Round Slash", Size = VT(0.8,0,0.8), Size2 = VT(0.75,0,0.75), Transparency = 0.5, Transparency2 = 1, CFrame = FACE.Head.CFrame * ANGLES(RAD(0), RAD(MRANDOM(0,359)), RAD(0)), MoveToPos = nil, RotationX = MRANDOM(-10,10)/50, RotationY = MRANDOM(-10,10), RotationZ = MRANDOM(-10,10)/50, Material = "ForceField", Color = C3(1,0,0), SoundID = nil, SoundPitch = nil, SoundVolume = nil, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
				FACE:SetPrimaryPartCFrame(CFR*CF(0,-i/15,-i*1.25)*ANGLES(RAD(45-(i*2)),0,0))
   
			end
			FACE:Remove()
		end
	end))
	SMILETRAIL.Enabled = true
	NewSound({ID = 3052201463,PARENT = ROOT,VOLUME = 3,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	for i=0, 0.45, 0.1 / ANIM_SPEED do
		Swait()
		ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.1) * ANGLES(RAD(0), RAD(0), RAD(45)), 1 / ANIM_SPEED)
		NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-45)), 1 / ANIM_SPEED)
		RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.15, 0.5, -0.75) * ANGLES(RAD(0), RAD(0), RAD(-90)) * ANGLES(RAD(25), RAD(0), RAD(0))  * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
		THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, CF(0,-1,0) * ANGLES(RAD(-100), RAD(0), RAD(0)), 1 / ANIM_SPEED)
		LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
		DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(-2), RAD(60), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(0)), 1 / ANIM_SPEED)
		LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -0.9, -0.3) * ANGLES(RAD(0), RAD(-100), RAD(0)) * ANGLES(RAD(-3), RAD(0), RAD(0)), 1 / ANIM_SPEED)
	end
	SMILETRAIL.Enabled = false
	ATTACKING = false
end
function FlyingScythe()
	if LOOSESCYTHE == false then
		ATTACKING = true
		for i=0, 0.5, 0.1 / ANIM_SPEED do
			Swait()
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-10)), 1 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-10), RAD(0), RAD(-2)) * ANGLES(RAD(0 - 2.5 * SIN(SINE / 12)), RAD(5), RAD(0)), 1 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 1 / ANIM_SPEED)
			THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 1 / ANIM_SPEED)
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(145), RAD(0), RAD(0)) * LEFTSHOULDERC0, 1 / ANIM_SPEED)
			DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(-25), RAD(0), RAD(0)), 1 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 1 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-75), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 1 / ANIM_SPEED)
		end
		ATTACKING = false
		LOOSESCYTHE = true
		local CapoPoof = function()
			coroutine.resume(coroutine.create(function()
				local FAKECAPO = DACAPO:Clone()
				FAKECAPO.Parent = Effects
				FAKECAPO:SetPrimaryPartCFrame(DACAPO.PrimaryPart.CFrame)
				for _, c in pairs(FAKECAPO:GetChildren()) do
					c.Color = C3(1,0,0)
					c.Material = "Neon"
					if c:IsA("UnionOperation") then
						c.UsePartColor = true
					end
					c.Anchored = true
				end
				NewSound({ID = 588694531,PARENT = FAKECAPO.PrimaryPart,VOLUME = 1,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
				Debris:AddItem(FAKECAPO,1)
			end))
		end
		CapoPoof()
		DACAPO_JOINT.Parent = nil
		local PART = DACAPO.PrimaryPart
		PART.Anchored = true
		local M = MRANDOM(0,359)
		PART.CFrame = CF(MOUSEPOS) * ANGLES(RAD(0), RAD(M), RAD(90))
		local DISTANCE = math.huge
		local LOOP = 0
		coroutine.resume(coroutine.create(function()
			repeat
				Swait(4)
				AreaOfEffect(PART.Position,10,20,20,false)
			until LOOSESCYTHE == false
		end))
		repeat
			LOOP = LOOP + 10
			Swait()
			CAPOTRAIL.Enabled = true
			DISTANCE = (PART.Position - ROOT.Position).Magnitude
			PART.CFrame = CF(CF(PART.Position,ROOT.Position)*CF(0,0,-1.5).p) * ANGLES(RAD(0), RAD(M-LOOP), RAD(90))
			WACKYEFFECT({Time = 15, EffectType = "Round Slash", Size = VT(0.3,0,0.3), Size2 = VT(0.25,0,0.25), Transparency = 0.5, Transparency2 = 1, CFrame = CF(PART.Position) * ANGLES(RAD(0), RAD(M-LOOP), RAD(0)), MoveToPos = nil, RotationX = MRANDOM(-10,10)/50, RotationY = MRANDOM(-10,10), RotationZ = MRANDOM(-10,10)/50, Material = "Neon", Color = C3(0,0,0), SoundID = nil, SoundPitch = 1, SoundVolume = 0.2, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
		until DISTANCE <= 3
		PART.Anchored = false
		CAPOTRAIL.Enabled = false
		LOOSESCYTHE = false
		DACAPO_JOINT.Parent = LEFTARM
	end
end
function Screech()
	HUM.WalkSpeed = 0
	HUM.JumpPower = 0
	ATTACKING = true
	for i=0, 0.2, 0.1 / ANIM_SPEED do
		Swait()
		ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-25)), 0.5 / ANIM_SPEED)
		NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-2)) * ANGLES(RAD(0 - 2.5 * SIN(SINE / 12)), RAD(5), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(135), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
		THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(-35), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
		LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
		DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-60), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
	end
	JAWOPEN = true
	NewSound({ID = 2463509926,PARENT = SMILEHEAD,VOLUME = 3,PITCH = 1.5,LOOP = false,MAXDISTANCE = 125,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	for i = 1, 5 do
		WACKYEFFECT({Time = 10+(i*5), EffectType = "Round Slash", Size = VT(i/75,0,i/75)+VT(0.45,0,0.45), Size2 = VT(i/75,0,i/75)+VT(0.5,0,0.5), Transparency = 0, Transparency2 = 1, CFrame = CF(SMILEHEAD.Position) * ANGLES(RAD(0), RAD(MRANDOM(0,359)), RAD(0)), MoveToPos = nil, RotationX = MRANDOM(-10,10)/50, RotationY = MRANDOM(-10,10), RotationZ = MRANDOM(-10,10)/50, Material = "ForceField", Color = C3(1,1,1), SoundID = nil, SoundPitch = nil, SoundVolume = nil, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
	end
	WACKYEFFECT({Time = 15, EffectType = "Sphere", Size = VT(1,1,1), Size2 = VT(25,25,25), Transparency = 0, Transparency2 = 1, CFrame = CF(SMILEHEAD.Position), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "ForceField", Color = C3(1,1,1), SoundID = nil, SoundPitch = nil, SoundVolume = nil, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
	local FOES = AreaOfEffect(SMILEHEAD.Position,25,0,0,true)
	if #FOES > 0 then
		for E = 1, #FOES do
			local TORS = FOES[E][3]
			local H = FOES[E][2]
			if H.Health > 0 then
				ApplyDamageTo(H,75)
				Concuss(H,10)
			end
			local BV = IT("BodyVelocity")
			BV.MaxForce = BV.MaxForce * 500
			BV.Velocity = CF(VT(SMILEHEAD.Position.X,TORSO.Position.Y,SMILEHEAD.Position.Z),TORS.Position+VT(0,15,0)).lookVector*75
			BV.Parent = TORS
			Debris:AddItem(BV,0.05)
		end
	end
	for i=0, 2, 0.1 / ANIM_SPEED do
		Swait()
		ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-25)), 0.5 / ANIM_SPEED)
		NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-2)) * ANGLES(RAD(0 - 2.5 * SIN(SINE / 12)), RAD(5), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(135+MRANDOM(-5,5)), RAD(MRANDOM(-5,5)), RAD(15+MRANDOM(-5,5))) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
		THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(-35+MRANDOM(-5,5)), RAD(MRANDOM(-5,5)), RAD(5+MRANDOM(-5,5))), 0.5 / ANIM_SPEED)
		LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
		DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-60), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
	end
	JAWOPEN = false
	HUM.WalkSpeed = 10
	HUM.JumpPower = 50
	ATTACKING = false
end
function Laser()
	ATTACKING = true
	local GYRO = IT("BodyGyro")
	GYRO.D = 50
	GYRO.P = 5000
	GYRO.MaxTorque = VT(0,4000000,0)
	GYRO.CFrame = CF(ROOT.Position,MOUSEPOS)
	GYRO.Parent = ROOT
	coroutine.resume(coroutine.create(function()
		repeat
			Swait()
			GYRO.CFrame = CF(ROOT.Position,MOUSEPOS)
		until ATTACKING == false
		GYRO:Remove()
	end))
	NewSound({ID = 2910079467,PARENT = HEAD,VOLUME = 2,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 80,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	for i=0, 0.3, 0.1 / ANIM_SPEED do
		Swait()
		ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-25), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
		THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
		LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
		DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
	end
	local A = IT("Attachment",HEAD)
	A.Position = VT(0,-0.05,-0.55)
	local FIREA = MODULE.Laser:Clone()
	FIREA.Parent = A
	FIREA.Enabled = true
	local LASERPART = CreatePart(3, Effects, "Neon", 1, 1, "Red", "Lazor", VT(0,0,0), true) 
	NewSound({ID = 487184062,PARENT = LASERPART,VOLUME = 2,PITCH = 1,LOOP = true,MAXDISTANCE = 75,EMITTERSIZE = 10,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	local B = IT("Attachment",LASERPART)
	local FIREB = MODULE.Laser:Clone()
	FIREB.Parent = B
	FIREB.Enabled = true
	local BEAM = MODULE.Beam:Clone()
	BEAM.Parent = LASERPART
	BEAM.Attachment0 = A
	BEAM.Attachment1 = B
	local DoLaserMath = function()
		local HIT,POS = CastProperRay(HEAD.Position,MOUSEPOS,1000,CHARACTER)
		LASERPART.CFrame = CF(POS)
		if HIT then
			if HIT.Parent:FindFirstChildOfClass("Humanoid") then
				if HIT.Parent:FindFirstChildOfClass("Humanoid").Health > 0 then
					local HUM = HIT.Parent:FindFirstChildOfClass("Humanoid")
					HUM.Health = HUM.Health - 2.5
					if HUM.Health <= 0 then
						Slaughter(HUM)
					else
						Concuss(HUM,2)
					end
					--NewSound({ID = 1489924400,PARENT = HIT,VOLUME = 1,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 75,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
				end
			elseif HIT.Parent.Parent:FindFirstChildOfClass("Humanoid") then
				if HIT.Parent.Parent:FindFirstChildOfClass("Humanoid").Health > 0 then
					local HUM = HIT.Parent.Parent:FindFirstChildOfClass("Humanoid")
					HUM.Health = HUM.Health - 2.5
					if HUM.Health <= 0 then
						Slaughter(HUM)
					else
						Concuss(HUM,2)
					end
					--NewSound({ID = 1489924400,PARENT = HIT,VOLUME = 1,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 75,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
				end
			end
		end
	end
	local DISABLE = false
 
	local BIGLOOP = 0
	repeat
		Swait()
		DoLaserMath()
		BIGLOOP = BIGLOOP + 1
		if BIGLOOP >= 65 then
			BIGLOOP = 0
			local FOES = AreaOfEffect(LASERPART.Position,12,0,0,true)
			if #FOES > 0 then
				for E = 1, #FOES do
					Slaughter(FOES[E][2])
				end
			end
			WACKYEFFECT({Time = 25, EffectType = "Sphere", Size = VT(1,1,1), Size2 = VT(17,17,17), Transparency = 0, Transparency2 = 1, CFrame = CF(LASERPART.Position), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "ForceField", Color = C3(1,0,0), SoundID = nil, SoundPitch = nil, SoundVolume = nil, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
			WACKYEFFECT({Time = 25, EffectType = "Sphere", Size = VT(1,1,1), Size2 = VT(14,14,14), Transparency = 0, Transparency2 = 1, CFrame = CF(LASERPART.Position), MoveToPos = nil, RotationX = 0, RotationY = 0, RotationZ = 0, Material = "Neon", Color = C3(1,0,0), SoundID = 401056199, SoundPitch = 2, SoundVolume = 0.5, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
		else
			BIGLOOP = BIGLOOP + 1
		end
		BEAM.Width1 = (BIGLOOP/10) + 1
		ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(10), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
		THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
		LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
		DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(20)), 0.5 / ANIM_SPEED)
		LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(-20)), 0.5 / ANIM_SPEED)
	until DISABLE == true
	A:Remove()
	B:Remove()
	LASERPART:Destroy()
	NC:Disconnect()
	for i=0, 0.5, 0.1 / ANIM_SPEED do
		Swait()
		ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-25), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
		THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
		LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
		DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
	end
	ATTACKING = false
end
function MistThrow()
	ATTACKING = true
	local GYRO = IT("BodyGyro")
	GYRO.D = 50
	GYRO.P = 5000
	GYRO.MaxTorque = VT(0,4000000,0)
	GYRO.CFrame = CF(ROOT.Position,MOUSEPOS)
	GYRO.Parent = ROOT
	coroutine.resume(coroutine.create(function()
		repeat
			Swait()
			GYRO.CFrame = CF(ROOT.Position,MOUSEPOS)
		until ATTACKING == false
		GYRO:Remove()
	end))
	NewSound({ID = 2910079467,PARENT = HEAD,VOLUME = 2,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 80,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	for i=0, 0.3, 0.1 / ANIM_SPEED do
		Swait()
		ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-25), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
		THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
		LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
		DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
	end
	for i = 1, 12 do
		for i=0, 0.25, 0.1 / ANIM_SPEED do
			Swait()
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(10), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
			THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
			DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(20)), 0.5 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(-20)), 0.5 / ANIM_SPEED)
		end
		coroutine.resume(coroutine.create(function()
			local TIME = 50
			local PROJECTILE = CreatePart(3,Effects,"Neon",0,1,"Red","Bullet",VT(0,0,0),true)
			PROJECTILE.CFrame = HEAD.CFrame
			NewSound({ID = 171137312,PARENT = PROJECTILE,VOLUME = 2,PITCH = MRANDOM(9,11)/10,LOOP = false,MAXDISTANCE = 80,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
			local A = IT("Attachment",PROJECTILE)
			local B = IT("Attachment",PROJECTILE)
			A.Position = VT(0,0.2,0)
			B.Position = VT(0,-0.2,0)
			local TRAIL = MODULE.Trail:Clone()
			TRAIL.Parent = PROJECTILE
			TRAIL.Attachment0 = A
			TRAIL.Attachment1 = B
			TRAIL.Enabled = true
			local HIT,POS = CastProperRay(PROJECTILE.Position,MOUSEPOS,2000,CHARACTER)
			PROJECTILE.CFrame = CF(PROJECTILE.Position,POS) * ANGLES(RAD(0), RAD(0), RAD(MRANDOM(-90,90)))
			local HEIGHT = TIME/5
			local DISTANCE = (PROJECTILE.Position - POS).Magnitude
			for i = 1, TIME do
				Swait()
				PROJECTILE.CFrame = PROJECTILE.CFrame * CF(0,(HEIGHT-(i/2.575))/100,-DISTANCE/TIME)
			end
			Mist(PROJECTILE.Position,MRANDOM(7,12))
			Debris:AddItem(PROJECTILE,0.2)
		end))
	end
	for i=0, 0.5, 0.1 / ANIM_SPEED do
		Swait()
		ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-25), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
		THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
		LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
		DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
		LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
	end
	ATTACKING = false
end
function Instant()
	local GOTO = CF(MOUSEPOS)*ANGLES(0,RAD(ROOT.Orientation.Y),0)
	local POOF = function()
		for i = 1, 5 do
			WACKYEFFECT({Time = 10+(i*5), EffectType = "Round Slash", Size = VT(i/75,0,i/75)+VT(0.45,0,0.45), Size2 = VT(i/75,0,i/75)+VT(0.5,0,0.5), Transparency = 0, Transparency2 = 1, CFrame = CF(ROOT.Position) * ANGLES(RAD(0), RAD(MRANDOM(0,359)), RAD(0)), MoveToPos = nil, RotationX = MRANDOM(-10,10)/50, RotationY = MRANDOM(-10,10), RotationZ = MRANDOM(-10,10)/50, Material = "ForceField", Color = C3(1,0,0), SoundID = nil, SoundPitch = nil, SoundVolume = nil, UseBoomerangMath = false, Boomerang = 0, SizeBoomerang = 0})
		end
		Mist(ROOT.Position,4)
	end
	POOF()
	ROOT.CFrame = GOTO
	POOF()
end
function Taunt(INPUT)
	if INPUT == "t" then
		NewSound({ID = 2563655622,PARENT = HEAD,VOLUME = 8,PITCH = 1,LOOP = false,MAXDISTANCE = 80,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	elseif INPUT == "y" then
		NewSound({ID = 2563656003,PARENT = HEAD,VOLUME = 8,PITCH = 1,LOOP = false,MAXDISTANCE = 80,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	elseif INPUT == "u" then
		NewSound({ID = 2563657337,PARENT = HEAD,VOLUME = 8,PITCH = 1,LOOP = false,MAXDISTANCE = 80,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	elseif INPUT == "j" then
		NewSound({ID = 2563654940,PARENT = HEAD,VOLUME = 8,PITCH = 1,LOOP = false,MAXDISTANCE = 80,EMITTERSIZE = 15,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
	end
end

--//====================================================\\--
--||                       WRAP
--\\====================================================//--

  Mouse = MOUSE
  
Mouse.KeyUp:connect(function()
			KEYHOLD = false
end)

Mouse.Button1Up:connect(function()
			MOUSEHOLD = false
end)
Mouse.Button1Down:connect(function()
		if ATTACKING == false then
				MOUSEHOLD = true
				MaceSwings()
				end

end)

Mouse.KeyDown:connect(function(V2)
				KEYHOLD = true
				if V2 == "e" then
					if ROOT:FindFirstChild("BGM_MUSIC") then
						ROOT:FindFirstChild("BGM_MUSIC"):Remove()
					else
						local M = NewSound({ID = 2670290447,PARENT = ROOT,VOLUME = 1.5,PITCH = 1,LOOP = true,MAXDISTANCE = 300,EMITTERSIZE = 300,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
						M.Name = "BGM_MUSIC"
					end
				elseif V2 == "z" then
					CapoRush()
				elseif V2 == "x" then
					Devour()
				elseif V2 == "c" then
					FlyingScythe()
				elseif V2 == "v" then
					Screech()
				elseif V2 == "b" then
 
				elseif V2 == "n" then
					MistThrow()
				elseif V2 == "m" then
					Instant()
				elseif V2 == "t" or V2 == "y" or V2 == "u" or V2 == "j" then
					Taunt(V2)
				end
 
 
end)

local M = NewSound({ID = 2670290447,PARENT = ROOT,VOLUME = 1.5,PITCH = 1,LOOP = true,MAXDISTANCE = 300,EMITTERSIZE = 300,PLAYING = true,PLAYONREMOVE = false,DOESDEBRIS = true})
M.Name = "BGM_MUSIC"
 
HUM.PlatformStand = false
 
 
 
while true do
	Swait()
	SINE = SINE + CHANGE
	if CHARACTER:FindFirstChild("Animate") then
		CHARACTER:FindFirstChild("Animate"):Destroy()
	end
	if CHARACTER:FindFirstChild("Sound") then
		CHARACTER:FindFirstChild("Sound"):Destroy()
	end
	for _,v in next, HUM:GetPlayingAnimationTracks() do
		v:Stop();
	end
	local TORSOVELOCITY = (ROOT.Velocity * VT(1, 0, 1)).magnitude
	local TORSOVERTICALVELOCITY = ROOT.Velocity.y
	local HITFLOOR = Raycast(ROOT.Position, (CF(ROOT.Position, ROOT.Position + VT(0, -1, 0))).lookVector, 4+HUM.HipHeight, CHARACTER)
	if HITFLOOR then
		MIST.Enabled = true
	else
		MIST.Enabled = false
	end
	local WALKSPEEDVALUE = 8 / (HUM.WalkSpeed / 16)
	local SITTING = HUM.Sit
	if ANIM == "Walk" and TORSOVELOCITY > 1 and ATTACKING == false and SITTING == false then
		ROOTJOINT.C1 = Clerp(ROOTJOINT.C1, ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0) - ROOT.RotVelocity.Y / 35, RAD(0)), 2 * (HUM.WalkSpeed / 16) / ANIM_SPEED)
		NECK.C1 = Clerp(NECK.C1, CF(0, -0.5, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(2.5 * SIN(SINE / (WALKSPEEDVALUE / 2))), RAD(0), RAD(0) - HEAD.RotVelocity.Y / 30), 0.2 * (HUM.WalkSpeed / 16) / ANIM_SPEED)
		RIGHTHIP.C1 = Clerp(RIGHTHIP.C1, CF(0.5, 0.875 - 0.3 * SIN(SINE / WALKSPEEDVALUE), -0.5 * COS(SINE / WALKSPEEDVALUE) + 0.2 * COS(SINE / WALKSPEEDVALUE)) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0) - RIGHTLEG.RotVelocity.Y / 35, RAD(0), RAD(25 * COS(SINE / WALKSPEEDVALUE))), 0.6 / ANIM_SPEED)
		LEFTHIP.C1 = Clerp(LEFTHIP.C1, CF(-0.5, 0.875 + 0.3 * SIN(SINE / WALKSPEEDVALUE), 0.5 * COS(SINE / WALKSPEEDVALUE) -0.2 * COS(SINE / WALKSPEEDVALUE)) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0) + LEFTLEG.RotVelocity.Y / 35, RAD(0), RAD(25 * COS(SINE / WALKSPEEDVALUE))), 0.6 / ANIM_SPEED)
	elseif (ANIM ~= "Walk") or (TORSOVELOCITY < 1) or ATTACKING == true or SITTING == true then
		ROOTJOINT.C1 = Clerp(ROOTJOINT.C1, ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / ANIM_SPEED)
		NECK.C1 = Clerp(NECK.C1, CF(0, -0.5, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / ANIM_SPEED)
		RIGHTHIP.C1 = Clerp(RIGHTHIP.C1, CF(0.5, 1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / ANIM_SPEED)
		LEFTHIP.C1 = Clerp(LEFTHIP.C1, CF(-0.5, 1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / ANIM_SPEED)
	end
	if SITTING == false then
		THESMILE_JOINT.Parent = RIGHTARM
		if LOOSESCYTHE == false then
			DACAPO_JOINT.Parent = LEFTARM
		end
		THESMILE.Parent = CHARACTER
		DACAPO.Parent = CHARACTER
		if HITFLOOR then
			if TORSOVELOCITY < 1 and HITFLOOR ~= nil then
				ANIM = "Idle"
				if ATTACKING == false then
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, 0 + 0.05 * COS(SINE / 12)) * ANGLES(RAD(0), RAD(0), RAD(-25)), 0.5 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(-2)) * ANGLES(RAD(0 - 2.5 * SIN(SINE / 12)), RAD(5), RAD(0)), 0.5 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5 + 0.05 * SIN(SINE / 12), 0) * ANGLES(RAD(35 + 2.5 * SIN(SINE / 12)), RAD(0), RAD(15 + 5 * COS(SINE / 12))) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
					THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5 + 0.05 * SIN(SINE / 12), 0) * ANGLES(RAD(-10), RAD(25), RAD(-5 * COS(SINE / 12))) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
					DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.25) * ANGLES(RAD(22), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -1 - 0.05 * COS(SINE / 12), 0) * ANGLES(RAD(0), RAD(85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1 - 0.05 * COS(SINE / 12), 0) * ANGLES(RAD(0), RAD(-60), RAD(0)) * ANGLES(RAD(-10), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
				end
			elseif TORSOVELOCITY > 1 and HITFLOOR ~= nil then
				ANIM = "Walk"
				if ATTACKING == false then
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.05 + 0.05 * COS(SINE / (WALKSPEEDVALUE / 2))) * ANGLES(RAD(5), RAD(0), RAD(10*COS(SINE / WALKSPEEDVALUE))), 0.25 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(1 * SIN(SINE / (WALKSPEEDVALUE / 2))), RAD(0), RAD(-10*COS(SINE / WALKSPEEDVALUE))), 0.25 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35 + 20 * COS(SINE / WALKSPEEDVALUE)), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
					THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10 - 10 * COS(SINE / WALKSPEEDVALUE)), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
					DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.25) * ANGLES(RAD(22 + 6 * COS(SINE / WALKSPEEDVALUE)), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1 , -1, 0) * ANGLES(RAD(0), RAD(90 - 10*COS(SINE / WALKSPEEDVALUE)), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-15)), 2 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-90 - 10*COS(SINE / WALKSPEEDVALUE)), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(15)), 2 / ANIM_SPEED)
				end
			end
		else
			if TORSOVERTICALVELOCITY > 0 then
				ANIM = "Jump"
				if ATTACKING == false then
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0, ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(-15), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(20), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
					THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
					DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.25) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -0.3, -0.6) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-20)), 1 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -0.9, -0.3) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(20)), 1 / ANIM_SPEED)
			    end
			else
				ANIM = "Fall"
				if ATTACKING == false then
					ROOTJOINT.C0 = Clerp(ROOTJOINT.C0, ROOTC0 * CF(0, 0, 0) * ANGLES(RAD(-5), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(15), RAD(0), RAD(0)), 1 / ANIM_SPEED)
					RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(35), RAD(0), RAD(15)) * RIGHTSHOULDERC0, 0.5 / ANIM_SPEED)
					THESMILE_JOINT.C0 = Clerp(THESMILE_JOINT.C0, ZERO * CF(0, 0, -0.5) * ANGLES(RAD(90), RAD(0), RAD(5)), 0.5 / ANIM_SPEED)
					LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-10), RAD(25), RAD(0)) * LEFTSHOULDERC0, 0.5 / ANIM_SPEED)
					DACAPO_JOINT.C0 = Clerp(DACAPO_JOINT.C0, ZERO * CF(0, 0, -0.25) * ANGLES(RAD(35), RAD(0), RAD(0)), 0.5 / ANIM_SPEED)
					RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -0.6, -0.6) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-10)), 1 / ANIM_SPEED)
					LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -1, -0.2) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(10)), 1 / ANIM_SPEED)
			    end
			end
		end
		if ATTACKING == false then
			if JAWOPEN == true then
				if MRANDOM(1,15) == 1 then
					JAWOPEN = false
				end
			else
				if MRANDOM(1,50) == 1 then
					JAWOPEN = true
				end
			end
		end
	else
		ANIM = "Sit"
		if ATTACKING == false then
			THESMILE_JOINT.Parent = nil
			DACAPO_JOINT.Parent = nil
			THESMILE.Parent = nil
			if LOOSESCYTHE == false then
				DACAPO.Parent = nil
			end
			ROOTJOINT.C0 = Clerp(ROOTJOINT.C0,ROOTC0 * CF(0, 0, -0.5) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.25 / ANIM_SPEED)
			NECK.C0 = Clerp(NECK.C0, NECKC0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1.25 / ANIM_SPEED)
			RIGHTSHOULDER.C0 = Clerp(RIGHTSHOULDER.C0, CF(1.5, 0.65, 0) * ANGLES(RAD(50), RAD(10), RAD(-45))*CF(0,-0.25,0) * RIGHTSHOULDERC0, 1.25 / ANIM_SPEED)
			LEFTSHOULDER.C0 = Clerp(LEFTSHOULDER.C0, CF(-1.5, 0.65, 0) * ANGLES(RAD(50), RAD(-10), RAD(45))*CF(0,-0.25,0) * LEFTSHOULDERC0, 1.25 / ANIM_SPEED)
			RIGHTHIP.C0 = Clerp(RIGHTHIP.C0, CF(1, -0.25, -1) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(10)), 1.25 / ANIM_SPEED)
			LEFTHIP.C0 = Clerp(LEFTHIP.C0, CF(-1, -0.25, -1) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-10)), 1.25 / ANIM_SPEED)
		end
	end
	if JAWOPEN == true then
		JAWJOINT1.C0 = Clerp(JAWJOINT1.C0,CF(0,0.2,0.05),0.2)
		JAWJOINT2.C0 = Clerp(JAWJOINT2.C0,CF(0,-0.2,0.05),0.2)
	else
		JAWJOINT1.C0 = Clerp(JAWJOINT1.C0,CF(0,0,0),0.2)
		JAWJOINT2.C0 = Clerp(JAWJOINT2.C0,CF(0,0,0),0.2)
	end
end
